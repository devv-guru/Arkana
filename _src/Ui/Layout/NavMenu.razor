@using Orientation = Microsoft.FluentUI.AspNetCore.Components.Orientation


<FluentStack Orientation="Orientation.Vertical" Style="width: 90px;min-height: calc(100vh - var(--header-height))">
    <FluentAppBar Items="@_apps.OrderBy(a => a.Order)"
                  Style="width: 100%;height: 100%;background-color: var(--neutral-layer-4);padding-top: 10px;">
    </FluentAppBar>
</FluentStack>


@code {

    private class FluentCustomAppBarItem : FluentAppBarItem
    {
        public int Order { get; set; }
    }

    private List<FluentCustomAppBarItem> _apps => new List<FluentCustomAppBarItem>
    {
        new FluentCustomAppBarItem { Order = 1, IconRest = MetricsIcon(), IconActive = MetricsIcon(active: true), Text = "Dashboard", Href = "", Match = NavLinkMatch.All },
        new FluentCustomAppBarItem { Order = 2, IconRest = CertificateIcon(), IconActive = CertificateIcon(active: true), Text = "Certificates", Href = "/counter" },
        new FluentCustomAppBarItem { Order = 3, IconRest = HostsIcon(), IconActive = HostsIcon(active: true), Text = "Hosts", Href = "/weather" }
    };

    private static Icon MetricsIcon(bool active = false) =>
        active
            ? new Icons.Filled.Size24.ChartMultiple()
            : new Icons.Regular.Size24.ChartMultiple();

    private static Icon CertificateIcon(bool active = false) =>
        active
            ? new Icons.Filled.Size24.Certificate()
            : new Icons.Regular.Size24.Certificate();

    private static Icon HostsIcon(bool active = false) =>
        active
            ? new Icons.Filled.Size24.Server()
            : new Icons.Regular.Size24.Server();

}