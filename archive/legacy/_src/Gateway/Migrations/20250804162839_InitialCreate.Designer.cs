// <auto-generated />
using System;
using Gateway.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gateway.Migrations
{
    [DbContext(typeof(GatewayDbContext))]
    [Migration("20250804162839_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("Gateway.Models.McpAuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Details")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("McpServerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("McpServerId");

                    b.HasIndex("Timestamp");

                    b.HasIndex("UserId");

                    b.ToTable("McpAuditLogs");
                });

            modelBuilder.Entity("Gateway.Models.McpServer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthSettings")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("AuthType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Endpoint")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Protocol")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("McpServers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthType = 1,
                            CreatedAt = new DateTime(2025, 8, 4, 16, 28, 39, 24, DateTimeKind.Utc).AddTicks(5639),
                            Description = "Basic arithmetic calculator tool",
                            Endpoint = "https://localhost:7001",
                            IsEnabled = true,
                            Name = "calculator",
                            Protocol = 0
                        });
                });

            modelBuilder.Entity("Gateway.Models.McpUserAccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("McpServerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Roles")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserEmail")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("McpServerId", "UserId")
                        .IsUnique();

                    b.ToTable("McpUserAccess");
                });

            modelBuilder.Entity("Gateway.Models.McpAuditLog", b =>
                {
                    b.HasOne("Gateway.Models.McpServer", "McpServer")
                        .WithMany()
                        .HasForeignKey("McpServerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("McpServer");
                });

            modelBuilder.Entity("Gateway.Models.McpUserAccess", b =>
                {
                    b.HasOne("Gateway.Models.McpServer", "McpServer")
                        .WithMany("UserAccess")
                        .HasForeignKey("McpServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("McpServer");
                });

            modelBuilder.Entity("Gateway.Models.McpServer", b =>
                {
                    b.Navigation("UserAccess");
                });
#pragma warning restore 612, 618
        }
    }
}
